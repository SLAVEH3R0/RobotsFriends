{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","Scroll","props","style","overflowY","border","height","children","SearchBox","searchfield","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACI,sBAAKC,UAAU,sDAAf,UACA,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,gCACI,6BAAKC,IACL,4BAAIC,WCaDI,EAlBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OACE,cAAC,EAAD,CAEAV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCAAC,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAQ,kBAAmBC,OAAO,SAAnE,SACGJ,EAAMK,YCUEC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACE,qBAAKjB,UAAU,MAAf,SACE,uBACAA,UAAU,mCACVkB,KAAK,SACLC,YAAY,gBACZC,SAAUH,OC8BDI,E,kDAjCb,aAAc,IAAD,8BACX,gBAaFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAACR,YAAaO,EAAME,OAAOC,SAbzC,EAAKC,MAAQ,CACXvB,OAAQ,GACRY,YAAY,IAJH,E,qDAQb,WAAoB,IAAD,OACjBY,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACpB,OAAQ4B,S,oBAOxC,WAAS,IAAD,OACAC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAAC,GAC5C,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS,EAAKX,MAAMX,YAAYqB,kBACpE,OACE,sBAAKrC,UAAU,KAAf,UACE,6CACA,cAAC,EAAD,CAAWiB,aAAciB,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAQ6B,a,GA3BRM,aCOHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.001b6b5e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n        <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n  return(\r\n    <div>\r\n      {\r\n        robots.map((user, i) => {\r\n        return (\r\n          <Card \r\n          key={i} \r\n          id={robots[i].id} \r\n          name={robots[i].name} \r\n          email={robots[i].email}/>\r\n        );\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflowY:'scroll', border: '1px solid black', height:'800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n  return(\r\n    <div className='pa2'>\r\n      <input \r\n      className='pa3 ba b--green bg-lightest-blue'\r\n      type='search' \r\n      placeholder='search robots'\r\n      onChange={searchChange} \r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport SearchBox from '../components/SearchBox';\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield:''\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => this.setState({robots: users}));\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({searchfield: event.target.value})\r\n  }\r\n\r\n  render(){\r\n    const filteredRobots = this.state.robots.filter(robot =>\r\n      { return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase()); })\r\n    return(\r\n      <div className='tc'>\r\n        <h1>RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange}/>\r\n        <Scroll>\r\n        <CardList robots={filteredRobots}/>\r\n        </Scroll>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport App from './containers/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","id","name","email","_jsxs","className","children","_jsx","alt","src","concat","CardList","robots","map","user","i","Scroll","props","style","overflowY","border","height","SearchBox","searchfield","searchChange","type","placeholder","onChange","App","Component","constructor","super","onSearchChange","event","this","setState","target","value","state","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","robot","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"gLAceA,MAZFC,IAA0B,IAAzB,GAAEC,EAAE,KAAEC,EAAI,MAAEC,GAAOH,EAC7B,OACII,eAAA,OAAKC,UAAU,sDAAqDC,SAAA,CACpEC,cAAA,OAAKC,IAAI,SAASC,IAAG,wBAAAC,OAA0BT,EAAE,cACjDG,eAAA,OAAAE,SAAA,CACIC,cAAA,MAAAD,SAAKJ,IACLK,cAAA,KAAAD,SAAIH,SAEF,ECWCQ,MAlBEX,IAAe,IAAd,OAACY,GAAOZ,EACxB,OACEO,cAAA,OAAAD,SAEIM,EAAOC,KAAI,CAACC,EAAMC,IAEhBR,cAACR,EAAI,CAELE,GAAIW,EAAOG,GAAGd,GACdC,KAAMU,EAAOG,GAAGb,KAChBC,MAAOS,EAAOG,GAAGZ,OAHZY,MAOL,ECPKC,MARCC,GAEZV,cAAA,OAAKW,MAAO,CAACC,UAAU,SAAUC,OAAQ,kBAAmBC,OAAO,SAASf,SACzEW,EAAMX,WCUEgB,MAbGtB,IAAkC,IAAjC,YAACuB,EAAW,aAAEC,GAAaxB,EAC5C,OACEO,cAAA,OAAKF,UAAU,MAAKC,SAClBC,cAAA,SACAF,UAAU,mCACVoB,KAAK,SACLC,YAAY,gBACZC,SAAUH,KAEN,ECNV,MAAMI,UAAYC,YAChBC,cACEC,QAAO,KAaTC,eAAkBC,IAChBC,KAAKC,SAAS,CAACZ,YAAaU,EAAMG,OAAOC,OAAO,EAbhDH,KAAKI,MAAQ,CACX1B,OAAQ,GACRW,YAAY,GAEhB,CAEAgB,oBACEC,MAAM,8CACLC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,GAASV,KAAKC,SAAS,CAACvB,OAAQgC,KACxC,CAMAC,SACE,MAAMC,EAAiBZ,KAAKI,MAAM1B,OAAOmC,QAAOC,GACrCA,EAAM9C,KAAK+C,cAAcC,SAAShB,KAAKI,MAAMf,YAAY0B,iBACpE,OACE7C,eAAA,OAAKC,UAAU,KAAIC,SAAA,CACjBC,cAAA,MAAAD,SAAI,gBACJC,cAACe,EAAS,CAACE,aAAcU,KAAKF,iBAC9BzB,cAACS,EAAM,CAAAV,SACPC,cAACI,EAAQ,CAACC,OAAQkC,QAIxB,EAGalB,Q,MC3BAuB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAKzC,IAAkD,IAAjD,OAAEsD,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS1D,EACpEsD,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EAAY,GAExB,ECFFO,IAASd,OAAOtC,cAACqB,EAAG,IAAKgC,SAASC,eAAe,SAKjDV,G","file":"static/js/main.64fe7e99.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ id, name, email }) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n        <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n        <div>\n            <h2>{name}</h2>\n            <p>{email}</p>\n        </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n  return(\n    <div>\n      {\n        robots.map((user, i) => {\n        return (\n          <Card \n          key={i} \n          id={robots[i].id} \n          name={robots[i].name} \n          email={robots[i].email}/>\n        );\n        })\n      }\n    </div>\n  )\n}\n\nexport default CardList;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{overflowY:'scroll', border: '1px solid black', height:'800px'}}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Scroll;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n  return(\n    <div className='pa2'>\n      <input \n      className='pa3 ba b--green bg-lightest-blue'\n      type='search' \n      placeholder='search robots'\n      onChange={searchChange} \n      />\n    </div>\n  )\n}\n\nexport default SearchBox;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport SearchBox from '../components/SearchBox';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      robots: [],\n      searchfield:''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({robots: users}));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value})\n  }\n\n  render(){\n    const filteredRobots = this.state.robots.filter(robot =>\n      { return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase()); })\n    return(\n      <div className='tc'>\n        <h1>RoboFriends</h1>\n        <SearchBox searchChange={this.onSearchChange}/>\n        <Scroll>\n        <CardList robots={filteredRobots}/>\n        </Scroll>\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport App from './containers/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}